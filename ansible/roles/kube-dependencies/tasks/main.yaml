---
  - name: reboot and wait for reboot to complete
    reboot:
  
  - name: disable SWAP (Kubeadm requirement)
    shell: |
      swapoff -a
  
  - name: disable SWAP in fstab (Kubeadm requirement)
    replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
      replace: '# \1'
  
  - name: create an empty file for Kubernetes sysctl params
    copy:
      content: ""
      dest: /etc/sysctl.d/99-kubernetes-cri.conf
      force: no
  
  - name: configure sysctl params for Kubernetes
    lineinfile:
      path: /etc/sysctl.d/99-kubernetes-cri.conf
      line: "{{ item }}"
    with_items:
      - 'net.bridge.bridge-nf-call-iptables  = 1'
      - 'net.ipv4.ip_forward                 = 1'
      - 'net.bridge.bridge-nf-call-ip6tables = 1'
  
  - name: apply sysctl params without reboot
    command: sysctl --system
 
  - name: create an empty file for the Kubernetes modules
    copy:
      content: ""
      dest: /etc/modules-load.d/kubernetes.conf
      force: no
  
  - name: configure modules for Kubernetes
    blockinfile:
      path: /etc/modules-load.d/kubernetes.conf
      block: |
           br_netfilter
  
  - name: install APT Transport HTTPS
    apt:
      name: apt-transport-https
      state: present
      update_cache: true
  
  - name: add Kubernetes's APT repository
    ansible.builtin.deb822_repository:
      name: kubernetes
      types: [deb]
      uris: "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version  }}/deb/"
      signed_by: https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version  }}/deb/Release.key
      suites: ["/"]
      state: present
      enabled: yes
 
  - name: add CRI-O's APT repository
    ansible.builtin.deb822_repository:
      name: cri-o
      types: [deb]
      uris: "https://pkgs.k8s.io/addons:/cri-o:/stable:/v{{ kubernetes_version  }}/deb/"
      signed_by: https://pkgs.k8s.io/addons:/cri-o:/stable:/v{{ kubernetes_version  }}/deb/Release.key
      suites: ["/"]
      state: present
      enabled: yes
  
  - name: install CRI-O
    apt:
      name: cri-o
      state: present
      update_cache: true
  
  - name: enable the CRI-O service and start it
    systemd:
      name: crio
      state: restarted
      enabled: yes
      daemon-reload: yes
  
  - name: install Kubelet
    apt:
      name: kubelet={{ kubernetes_version  }}.*
      state: present
  
  - name: install Kubeadm
    apt:
      name: kubeadm={{ kubernetes_version  }}.*
      state: present
  
  - name: enable the Kubelet service, and enable it persistently
    service:
      name: kubelet
      enabled: yes
  
  - name: reboot and wait for reboot to complete
    reboot:
